// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.11
// source: pb/nocc-protobuf.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientFileName string `protobuf:"bytes,1,opt,name=ClientFileName,proto3" json:"ClientFileName,omitempty"`
	FileSize       int64  `protobuf:"varint,2,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	SHA256_B0_7    uint64 `protobuf:"fixed64,10,opt,name=SHA256_B0_7,json=SHA256B07,proto3" json:"SHA256_B0_7,omitempty"`
	SHA256_B8_15   uint64 `protobuf:"fixed64,11,opt,name=SHA256_B8_15,json=SHA256B815,proto3" json:"SHA256_B8_15,omitempty"`
	SHA256_B16_23  uint64 `protobuf:"fixed64,12,opt,name=SHA256_B16_23,json=SHA256B1623,proto3" json:"SHA256_B16_23,omitempty"`
	SHA256_B24_31  uint64 `protobuf:"fixed64,13,opt,name=SHA256_B24_31,json=SHA256B2431,proto3" json:"SHA256_B24_31,omitempty"`
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{0}
}

func (x *FileMetadata) GetClientFileName() string {
	if x != nil {
		return x.ClientFileName
	}
	return ""
}

func (x *FileMetadata) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetSHA256_B0_7() uint64 {
	if x != nil {
		return x.SHA256_B0_7
	}
	return 0
}

func (x *FileMetadata) GetSHA256_B8_15() uint64 {
	if x != nil {
		return x.SHA256_B8_15
	}
	return 0
}

func (x *FileMetadata) GetSHA256_B16_23() uint64 {
	if x != nil {
		return x.SHA256_B16_23
	}
	return 0
}

func (x *FileMetadata) GetSHA256_B24_31() uint64 {
	if x != nil {
		return x.SHA256_B24_31
	}
	return 0
}

type StartClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID        string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	HostUserName    string `protobuf:"bytes,2,opt,name=HostUserName,proto3" json:"HostUserName,omitempty"`
	ClientVersion   string `protobuf:"bytes,3,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"`
	DisableObjCache bool   `protobuf:"varint,10,opt,name=DisableObjCache,proto3" json:"DisableObjCache,omitempty"`
}

func (x *StartClientRequest) Reset() {
	*x = StartClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClientRequest) ProtoMessage() {}

func (x *StartClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClientRequest.ProtoReflect.Descriptor instead.
func (*StartClientRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{1}
}

func (x *StartClientRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *StartClientRequest) GetHostUserName() string {
	if x != nil {
		return x.HostUserName
	}
	return ""
}

func (x *StartClientRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *StartClientRequest) GetDisableObjCache() bool {
	if x != nil {
		return x.DisableObjCache
	}
	return false
}

type StartClientReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartClientReply) Reset() {
	*x = StartClientReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartClientReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClientReply) ProtoMessage() {}

func (x *StartClientReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClientReply.ProtoReflect.Descriptor instead.
func (*StartClientReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{2}
}

type StartCompilationSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID      string          `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	SessionID     uint32          `protobuf:"varint,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	Cwd           string          `protobuf:"bytes,3,opt,name=Cwd,proto3" json:"Cwd,omitempty"`
	CppInFile     string          `protobuf:"bytes,10,opt,name=CppInFile,proto3" json:"CppInFile,omitempty"`
	CxxName       string          `protobuf:"bytes,11,opt,name=CxxName,proto3" json:"CxxName,omitempty"`
	CxxArgs       []string        `protobuf:"bytes,12,rep,name=CxxArgs,proto3" json:"CxxArgs,omitempty"`
	CxxIDirs      []string        `protobuf:"bytes,13,rep,name=CxxIDirs,proto3" json:"CxxIDirs,omitempty"`
	RequiredFiles []*FileMetadata `protobuf:"bytes,14,rep,name=RequiredFiles,proto3" json:"RequiredFiles,omitempty"`
}

func (x *StartCompilationSessionRequest) Reset() {
	*x = StartCompilationSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCompilationSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCompilationSessionRequest) ProtoMessage() {}

func (x *StartCompilationSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCompilationSessionRequest.ProtoReflect.Descriptor instead.
func (*StartCompilationSessionRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{3}
}

func (x *StartCompilationSessionRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *StartCompilationSessionRequest) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *StartCompilationSessionRequest) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *StartCompilationSessionRequest) GetCppInFile() string {
	if x != nil {
		return x.CppInFile
	}
	return ""
}

func (x *StartCompilationSessionRequest) GetCxxName() string {
	if x != nil {
		return x.CxxName
	}
	return ""
}

func (x *StartCompilationSessionRequest) GetCxxArgs() []string {
	if x != nil {
		return x.CxxArgs
	}
	return nil
}

func (x *StartCompilationSessionRequest) GetCxxIDirs() []string {
	if x != nil {
		return x.CxxIDirs
	}
	return nil
}

func (x *StartCompilationSessionRequest) GetRequiredFiles() []*FileMetadata {
	if x != nil {
		return x.RequiredFiles
	}
	return nil
}

type StartCompilationSessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIndexesToUpload []uint32 `protobuf:"varint,1,rep,packed,name=FileIndexesToUpload,proto3" json:"FileIndexesToUpload,omitempty"`
}

func (x *StartCompilationSessionReply) Reset() {
	*x = StartCompilationSessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCompilationSessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCompilationSessionReply) ProtoMessage() {}

func (x *StartCompilationSessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCompilationSessionReply.ProtoReflect.Descriptor instead.
func (*StartCompilationSessionReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{4}
}

func (x *StartCompilationSessionReply) GetFileIndexesToUpload() []uint32 {
	if x != nil {
		return x.FileIndexesToUpload
	}
	return nil
}

type UploadFileChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID  string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	SessionID uint32 `protobuf:"varint,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	FileIndex uint32 `protobuf:"varint,3,opt,name=FileIndex,proto3" json:"FileIndex,omitempty"`
	ChunkBody []byte `protobuf:"bytes,4,opt,name=ChunkBody,proto3" json:"ChunkBody,omitempty"`
}

func (x *UploadFileChunkRequest) Reset() {
	*x = UploadFileChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunkRequest) ProtoMessage() {}

func (x *UploadFileChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadFileChunkRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileChunkRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UploadFileChunkRequest) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *UploadFileChunkRequest) GetFileIndex() uint32 {
	if x != nil {
		return x.FileIndex
	}
	return 0
}

func (x *UploadFileChunkRequest) GetChunkBody() []byte {
	if x != nil {
		return x.ChunkBody
	}
	return nil
}

type UploadFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadFileReply) Reset() {
	*x = UploadFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReply) ProtoMessage() {}

func (x *UploadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReply.ProtoReflect.Descriptor instead.
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{6}
}

type OpenReceiveStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *OpenReceiveStreamRequest) Reset() {
	*x = OpenReceiveStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenReceiveStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenReceiveStreamRequest) ProtoMessage() {}

func (x *OpenReceiveStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenReceiveStreamRequest.ProtoReflect.Descriptor instead.
func (*OpenReceiveStreamRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{7}
}

func (x *OpenReceiveStreamRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type RecvCompiledObjChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID   uint32 `protobuf:"varint,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	CxxExitCode int32  `protobuf:"varint,2,opt,name=CxxExitCode,proto3" json:"CxxExitCode,omitempty"`
	CxxStdout   []byte `protobuf:"bytes,3,opt,name=CxxStdout,proto3" json:"CxxStdout,omitempty"`
	CxxStderr   []byte `protobuf:"bytes,4,opt,name=CxxStderr,proto3" json:"CxxStderr,omitempty"`
	CxxDuration int32  `protobuf:"varint,5,opt,name=CxxDuration,proto3" json:"CxxDuration,omitempty"`
	FileSize    int64  `protobuf:"varint,6,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	ChunkBody   []byte `protobuf:"bytes,7,opt,name=ChunkBody,proto3" json:"ChunkBody,omitempty"`
}

func (x *RecvCompiledObjChunkReply) Reset() {
	*x = RecvCompiledObjChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecvCompiledObjChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecvCompiledObjChunkReply) ProtoMessage() {}

func (x *RecvCompiledObjChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecvCompiledObjChunkReply.ProtoReflect.Descriptor instead.
func (*RecvCompiledObjChunkReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{8}
}

func (x *RecvCompiledObjChunkReply) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *RecvCompiledObjChunkReply) GetCxxExitCode() int32 {
	if x != nil {
		return x.CxxExitCode
	}
	return 0
}

func (x *RecvCompiledObjChunkReply) GetCxxStdout() []byte {
	if x != nil {
		return x.CxxStdout
	}
	return nil
}

func (x *RecvCompiledObjChunkReply) GetCxxStderr() []byte {
	if x != nil {
		return x.CxxStderr
	}
	return nil
}

func (x *RecvCompiledObjChunkReply) GetCxxDuration() int32 {
	if x != nil {
		return x.CxxDuration
	}
	return 0
}

func (x *RecvCompiledObjChunkReply) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *RecvCompiledObjChunkReply) GetChunkBody() []byte {
	if x != nil {
		return x.ChunkBody
	}
	return nil
}

type StopClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *StopClientRequest) Reset() {
	*x = StopClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClientRequest) ProtoMessage() {}

func (x *StopClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClientRequest.ProtoReflect.Descriptor instead.
func (*StopClientRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{9}
}

func (x *StopClientRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type StopClientReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopClientReply) Reset() {
	*x = StopClientReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopClientReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClientReply) ProtoMessage() {}

func (x *StopClientReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClientReply.ProtoReflect.Descriptor instead.
func (*StopClientReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{10}
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{11}
}

type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion string   `protobuf:"bytes,1,opt,name=ServerVersion,proto3" json:"ServerVersion,omitempty"`
	ServerArgs    []string `protobuf:"bytes,2,rep,name=ServerArgs,proto3" json:"ServerArgs,omitempty"`
	ServerUptime  int64    `protobuf:"varint,3,opt,name=ServerUptime,proto3" json:"ServerUptime,omitempty"`
	GccVersion    string   `protobuf:"bytes,4,opt,name=GccVersion,proto3" json:"GccVersion,omitempty"`
	ClangVersion  string   `protobuf:"bytes,5,opt,name=ClangVersion,proto3" json:"ClangVersion,omitempty"`
	LogFileSize   int64    `protobuf:"varint,6,opt,name=LogFileSize,proto3" json:"LogFileSize,omitempty"`
	SrcCacheSize  int64    `protobuf:"varint,7,opt,name=SrcCacheSize,proto3" json:"SrcCacheSize,omitempty"`
	ObjCacheSize  int64    `protobuf:"varint,8,opt,name=ObjCacheSize,proto3" json:"ObjCacheSize,omitempty"`
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{12}
}

func (x *StatusReply) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *StatusReply) GetServerArgs() []string {
	if x != nil {
		return x.ServerArgs
	}
	return nil
}

func (x *StatusReply) GetServerUptime() int64 {
	if x != nil {
		return x.ServerUptime
	}
	return 0
}

func (x *StatusReply) GetGccVersion() string {
	if x != nil {
		return x.GccVersion
	}
	return ""
}

func (x *StatusReply) GetClangVersion() string {
	if x != nil {
		return x.ClangVersion
	}
	return ""
}

func (x *StatusReply) GetLogFileSize() int64 {
	if x != nil {
		return x.LogFileSize
	}
	return 0
}

func (x *StatusReply) GetSrcCacheSize() int64 {
	if x != nil {
		return x.SrcCacheSize
	}
	return 0
}

func (x *StatusReply) GetObjCacheSize() int64 {
	if x != nil {
		return x.ObjCacheSize
	}
	return 0
}

type DumpLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DumpLogsRequest) Reset() {
	*x = DumpLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpLogsRequest) ProtoMessage() {}

func (x *DumpLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpLogsRequest.ProtoReflect.Descriptor instead.
func (*DumpLogsRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{13}
}

type DumpLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogFileExt string `protobuf:"bytes,1,opt,name=LogFileExt,proto3" json:"LogFileExt,omitempty"`
	ChunkBody  []byte `protobuf:"bytes,2,opt,name=ChunkBody,proto3" json:"ChunkBody,omitempty"`
}

func (x *DumpLogsReply) Reset() {
	*x = DumpLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpLogsReply) ProtoMessage() {}

func (x *DumpLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpLogsReply.ProtoReflect.Descriptor instead.
func (*DumpLogsReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{14}
}

func (x *DumpLogsReply) GetLogFileExt() string {
	if x != nil {
		return x.LogFileExt
	}
	return ""
}

func (x *DumpLogsReply) GetChunkBody() []byte {
	if x != nil {
		return x.ChunkBody
	}
	return nil
}

type DropAllCachesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropAllCachesRequest) Reset() {
	*x = DropAllCachesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAllCachesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAllCachesRequest) ProtoMessage() {}

func (x *DropAllCachesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAllCachesRequest.ProtoReflect.Descriptor instead.
func (*DropAllCachesRequest) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{15}
}

type DropAllCachesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DroppedSrcFiles int64 `protobuf:"varint,1,opt,name=droppedSrcFiles,proto3" json:"droppedSrcFiles,omitempty"`
	DroppedObjFiles int64 `protobuf:"varint,2,opt,name=droppedObjFiles,proto3" json:"droppedObjFiles,omitempty"`
}

func (x *DropAllCachesReply) Reset() {
	*x = DropAllCachesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nocc_protobuf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAllCachesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAllCachesReply) ProtoMessage() {}

func (x *DropAllCachesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nocc_protobuf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAllCachesReply.ProtoReflect.Descriptor instead.
func (*DropAllCachesReply) Descriptor() ([]byte, []int) {
	return file_pb_nocc_protobuf_proto_rawDescGZIP(), []int{16}
}

func (x *DropAllCachesReply) GetDroppedSrcFiles() int64 {
	if x != nil {
		return x.DroppedSrcFiles
	}
	return 0
}

func (x *DropAllCachesReply) GetDroppedObjFiles() int64 {
	if x != nil {
		return x.DroppedObjFiles
	}
	return 0
}

var File_pb_nocc_protobuf_proto protoreflect.FileDescriptor

var file_pb_nocc_protobuf_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x62, 0x2f, 0x6e, 0x6f, 0x63, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x6f, 0x63, 0x63, 0x22, 0xdc,
	0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x42, 0x30,
	0x5f, 0x37, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,
	0x42, 0x30, 0x37, 0x12, 0x20, 0x0a, 0x0c, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f, 0x42, 0x38,
	0x5f, 0x31, 0x35, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x53, 0x48, 0x41, 0x32, 0x35,
	0x36, 0x42, 0x38, 0x31, 0x35, 0x12, 0x22, 0x0a, 0x0d, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x5f,
	0x42, 0x31, 0x36, 0x5f, 0x32, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x53, 0x48,
	0x41, 0x32, 0x35, 0x36, 0x42, 0x31, 0x36, 0x32, 0x33, 0x12, 0x22, 0x0a, 0x0d, 0x53, 0x48, 0x41,
	0x32, 0x35, 0x36, 0x5f, 0x42, 0x32, 0x34, 0x5f, 0x33, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x42, 0x32, 0x34, 0x33, 0x31, 0x22, 0xa4, 0x01,
	0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x94, 0x02, 0x0a, 0x1e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x77, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x70, 0x70, 0x49, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x70, 0x70, 0x49,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x78, 0x78, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x78, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x78, 0x78, 0x41, 0x72, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x78, 0x78, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x78, 0x78,
	0x49, 0x44, 0x69, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x43, 0x78, 0x78,
	0x49, 0x44, 0x69, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x6f, 0x63, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22,
	0x50, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x30, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54, 0x6f,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xf3, 0x01,
	0x0a, 0x19, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x78, 0x78,
	0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x43, 0x78, 0x78, 0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x78, 0x78, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x43, 0x78, 0x78, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x78, 0x78,
	0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x43, 0x78,
	0x78, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x78, 0x78, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x78,
	0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42,
	0x6f, 0x64, 0x79, 0x22, 0x2f, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x63, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x47, 0x63, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6c, 0x61, 0x6e, 0x67, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x6f, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x72, 0x63, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x53, 0x72, 0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x4f, 0x62, 0x6a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x4f, 0x62, 0x6a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x44, 0x75, 0x6d, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0d, 0x44, 0x75, 0x6d, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x45,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x12, 0x44, 0x72,
	0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x53, 0x72, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x53, 0x72, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x32, 0xe4, 0x04, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6e, 0x6f, 0x63,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x63, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x63, 0x63,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x2e,
	0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x64, 0x4f, 0x62, 0x6a, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x6f, 0x63, 0x63,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x6e,
	0x6f, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x44, 0x75, 0x6d, 0x70, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x15, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6e, 0x6f, 0x63, 0x63,
	0x2e, 0x44, 0x75, 0x6d, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x47, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x41,
	0x6c, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6e, 0x6f, 0x63, 0x63, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x4b, 0x43, 0x4f, 0x4d, 0x2f,
	0x6e, 0x6f, 0x63, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_nocc_protobuf_proto_rawDescOnce sync.Once
	file_pb_nocc_protobuf_proto_rawDescData = file_pb_nocc_protobuf_proto_rawDesc
)

func file_pb_nocc_protobuf_proto_rawDescGZIP() []byte {
	file_pb_nocc_protobuf_proto_rawDescOnce.Do(func() {
		file_pb_nocc_protobuf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_nocc_protobuf_proto_rawDescData)
	})
	return file_pb_nocc_protobuf_proto_rawDescData
}

var file_pb_nocc_protobuf_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pb_nocc_protobuf_proto_goTypes = []interface{}{
	(*FileMetadata)(nil),                   // 0: nocc.FileMetadata
	(*StartClientRequest)(nil),             // 1: nocc.StartClientRequest
	(*StartClientReply)(nil),               // 2: nocc.StartClientReply
	(*StartCompilationSessionRequest)(nil), // 3: nocc.StartCompilationSessionRequest
	(*StartCompilationSessionReply)(nil),   // 4: nocc.StartCompilationSessionReply
	(*UploadFileChunkRequest)(nil),         // 5: nocc.UploadFileChunkRequest
	(*UploadFileReply)(nil),                // 6: nocc.UploadFileReply
	(*OpenReceiveStreamRequest)(nil),       // 7: nocc.OpenReceiveStreamRequest
	(*RecvCompiledObjChunkReply)(nil),      // 8: nocc.RecvCompiledObjChunkReply
	(*StopClientRequest)(nil),              // 9: nocc.StopClientRequest
	(*StopClientReply)(nil),                // 10: nocc.StopClientReply
	(*StatusRequest)(nil),                  // 11: nocc.StatusRequest
	(*StatusReply)(nil),                    // 12: nocc.StatusReply
	(*DumpLogsRequest)(nil),                // 13: nocc.DumpLogsRequest
	(*DumpLogsReply)(nil),                  // 14: nocc.DumpLogsReply
	(*DropAllCachesRequest)(nil),           // 15: nocc.DropAllCachesRequest
	(*DropAllCachesReply)(nil),             // 16: nocc.DropAllCachesReply
}
var file_pb_nocc_protobuf_proto_depIdxs = []int32{
	0,  // 0: nocc.StartCompilationSessionRequest.RequiredFiles:type_name -> nocc.FileMetadata
	1,  // 1: nocc.CompilationService.StartClient:input_type -> nocc.StartClientRequest
	3,  // 2: nocc.CompilationService.StartCompilationSession:input_type -> nocc.StartCompilationSessionRequest
	5,  // 3: nocc.CompilationService.UploadFileStream:input_type -> nocc.UploadFileChunkRequest
	7,  // 4: nocc.CompilationService.RecvCompiledObjStream:input_type -> nocc.OpenReceiveStreamRequest
	9,  // 5: nocc.CompilationService.StopClient:input_type -> nocc.StopClientRequest
	11, // 6: nocc.CompilationService.Status:input_type -> nocc.StatusRequest
	13, // 7: nocc.CompilationService.DumpLogs:input_type -> nocc.DumpLogsRequest
	15, // 8: nocc.CompilationService.DropAllCaches:input_type -> nocc.DropAllCachesRequest
	2,  // 9: nocc.CompilationService.StartClient:output_type -> nocc.StartClientReply
	4,  // 10: nocc.CompilationService.StartCompilationSession:output_type -> nocc.StartCompilationSessionReply
	6,  // 11: nocc.CompilationService.UploadFileStream:output_type -> nocc.UploadFileReply
	8,  // 12: nocc.CompilationService.RecvCompiledObjStream:output_type -> nocc.RecvCompiledObjChunkReply
	10, // 13: nocc.CompilationService.StopClient:output_type -> nocc.StopClientReply
	12, // 14: nocc.CompilationService.Status:output_type -> nocc.StatusReply
	14, // 15: nocc.CompilationService.DumpLogs:output_type -> nocc.DumpLogsReply
	16, // 16: nocc.CompilationService.DropAllCaches:output_type -> nocc.DropAllCachesReply
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pb_nocc_protobuf_proto_init() }
func file_pb_nocc_protobuf_proto_init() {
	if File_pb_nocc_protobuf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_nocc_protobuf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartClientReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCompilationSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCompilationSessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenReceiveStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecvCompiledObjChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopClientReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAllCachesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nocc_protobuf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAllCachesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_nocc_protobuf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_nocc_protobuf_proto_goTypes,
		DependencyIndexes: file_pb_nocc_protobuf_proto_depIdxs,
		MessageInfos:      file_pb_nocc_protobuf_proto_msgTypes,
	}.Build()
	File_pb_nocc_protobuf_proto = out.File
	file_pb_nocc_protobuf_proto_rawDesc = nil
	file_pb_nocc_protobuf_proto_goTypes = nil
	file_pb_nocc_protobuf_proto_depIdxs = nil
}
